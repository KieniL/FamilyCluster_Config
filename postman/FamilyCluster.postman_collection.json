{
	"info": {
		"_postman_id": "8288fd45-1c77-488d-9013-c7d6e9cd4760",
		"name": "FamilyCluster",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Authenticate_User_BadFlow_emptyUsername",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Authenticate_User_BadFlow_emptyPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Authenticate_User_BadFlow_notExistingUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Authenticate_User_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Token in Response JSON\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"token\");",
											"    ",
											"});",
											"",
											"pm.test(\"Has Username in Response Json\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"\\\"allowedApplicationList\\\":[]\");",
											"});",
											"",
											"",
											"",
											"var data = JSON.parse(responseBody);",
											"console.log(data);",
											"pm.collectionVariables.set(\"token\", data.token);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"test\",\n  \"password\": \"test\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Users_GoodFlow_Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Empty Array\", function() {",
											"    pm.response.to.have.body('[{\"id\":\"1\",\"username\":\"test\"}]');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_User_BadFlow_wrongContentType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 415\", function () {",
											"    pm.response.to.have.status(415);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_User_BadFlow_emptyUsername",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_User_BadFlow_emptyPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify_JWT_BadFlow_notExistingUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"str1\",\n  \"token\": \"{{token}}\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_User_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Token in Response JSON\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"jwt\");",
											"});",
											"",
											"pm.test(\"Has Username in Response Json\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"\\\"username\\\":\\\"string\\\"\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_User_BadFlow_secondTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Users_GoodFlow_Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"username\\\":\\\"test\\\"},{\\\"id\\\":\\\"2\\\",\\\"username\\\":\\\"string\\\"}]\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register_User_GoodFlow_AnotherUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Token in Response JSON\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"jwt\");",
											"});",
											"",
											"pm.test(\"Has Username in Response Json\", function() {",
											"    pm.expect(pm.response.text()).to.include(\"\\\"username\\\":\\\"string1\\\"\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string1\",\n  \"password\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Users_GoodFlow_DoubleContent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"username\\\":\\\"test\\\"},{\\\"id\\\":\\\"2\\\",\\\"username\\\":\\\"string\\\"},{\\\"id\\\":\\\"3\\\",\\\"username\\\":\\\"string1\\\"}]\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify_JWT_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"mfaNeeded\\\":true,\\\"mfaAction\\\":\\\"setup\\\"}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"string1\",\n  \"token\": \"{{token}}\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"response": []
						},
						{
							"name": "ChangePassword_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"changed\\\":true}\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"{{token}}\",\n  \"password\": \"string1\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "ChangePassword_BadFlow_missingJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"type": "text",
										"value": "1.2.3.4"
									},
									{
										"key": "SOURCE_IP",
										"type": "text",
										"value": "10.10.10.10"
									},
									{
										"key": "JWT",
										"type": "text",
										"value": "{{token}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"string1\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "ChangePassword_BadFlow_missingPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"{{token}}\",\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "ChangePassword_BadFlow_emptyPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"changed\\\":false}\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"{{token}}\",\n  \"password\": \"\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "ChangePassword_BadFlow_nonExistingUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"{{token}}\",\n  \"password\": \"string1\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/auth/bla",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"auth",
										"bla"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Apps",
					"item": [
						{
							"name": "Get_Apps_GoodFlow_Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Empty Array\", function() {",
											"    pm.response.to.have.body('[]');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_emptyJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": [\n    \"string\"\n  ]\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_wrongJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 403\", function () {",
											"    pm.response.to.have.status(403);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "Test",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"string\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": [\n    \"string\"\n  ]\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_BadRequest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_onlyJWT",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_Wrong_MediaType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 415\", function () {",
											"    pm.response.to.have.status(415);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_Missing_Appname",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_Missing_CssClasses",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"allowedUsers\": []\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_Missing_URL",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_Missing_AllowedUsers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\"\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_App_By_Name_BadFlow_Non_Existing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    var res = (_.isEmpty(responseBody));",
											"    pm.expect(res).to.be.true",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Response Json\", function() {",
											"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":null,\\\"allowedUsers\\\":[]}\");",
											"});",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_App_By_Name_Good_Flow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Response Json\", function() {",
											"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"string\\\",\\\"allowedUsers\\\":[]}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app/string",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_BadFlow_App_SecondTime",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Apps_GoodFlow_Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"appname\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"string\\\"}]\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_App_GoodFlow_AnotherApp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Response Json\", function() {",
											"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"testapp\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":null,\\\"allowedUsers\\\":[]}\");",
											"});",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"testapp\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Apps_GoodFlow_Double_Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"appname\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"string\\\"},{\\\"id\\\":\\\"2\\\",\\\"appname\\\":\\\"testapp\\\",\\\"cssClasses\\\":\\\"string\\\"}]\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update_App_GoodFlow_FirstApp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Response Json\", function() {",
											"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\",\\\"allowedUsers\\\":[]}\");",
											"});",
											"    "
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"test\",\n  \"allowedUsers\": []\n}"
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Apps_GoodFlow_Double_Content_PostUpdate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"appname\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\"},{\\\"id\\\":\\\"2\\\",\\\"appname\\\":\\\"testapp\\\",\\\"cssClasses\\\":\\\"string\\\"}]\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_App_By_Name_Good_Flow_PostUpdate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Response Json\", function() {",
											"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\",\\\"allowedUsers\\\":[]}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{AUTH_HOST}}/app/string",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AppOfUser",
					"item": [
						{
							"name": "GetAppOfUser_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Empty Array\", function() {",
											"    pm.response.to.have.body('[]');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/appOfUser/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"appOfUser",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAppOfUser_BadFlow_NonExistingUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Empty Array\", function() {",
											"    pm.response.to.have.body('[]');",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/appOfUser/str",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"appOfUser",
										"str"
									]
								}
							},
							"response": []
						},
						{
							"name": "VerifyAppOfUser_BadFlow_NotAllowed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"",
											"pm.test(\"Has Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"not_allowed\\\"}\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app/string/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "VerifyAppOfUser_BadFlow_NotExistingApp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"",
											"pm.test(\"Has Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"not_allowed\\\"}\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app/test111/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"test111",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "VerifyAppOfUser_BadFlow_NotExistingUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"",
											"pm.test(\"Has Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"not_allowed\\\"}\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app/test/string1111",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"test",
										"string1111"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddAppOfUser_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"updated\\\":true}\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app/string/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string",
										"string1"
									],
									"query": [
										{
											"key": "X-Request-ID",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "AddAppOfUser_BadFlow_NotExistingApp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"updated\\\":false}\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app/string11/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string11",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddAppOfUser_BadFlow_NotExistingUser",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 500\", function () {",
											"    pm.response.to.have.status(500);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app/string/string1111",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string",
										"string1111"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetAppOfUser_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\",\\\"allowedUsers\\\":null}]\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/appOfUser/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"appOfUser",
										"string1"
									]
								}
							},
							"response": []
						},
						{
							"name": "VerifyAppOfUser_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"",
											"pm.test(\"Has Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"allowed\\\"}\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "SOURCE_IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{AUTH_HOST}}/app/string/string1",
									"host": [
										"{{AUTH_HOST}}"
									],
									"path": [
										"app",
										"string",
										"string1"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Ansparen",
			"item": [
				{
					"name": "Get_Amount_GoodFlow_Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Empty Array\", function() {",
									"    pm.response.to.have.body('[{\"description\":\"Gesamt\",\"entries\":[]}]');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_BadFlow_Wrong_MediaType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 415\", function () {",
									"    pm.response.to.have.status(415);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_BadFlow_BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_BadFlow_MissingValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2021-06-29\",\n  \"description\": \"test\"\n}"
						},
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_BadFlow_MissingDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"test\",\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_BadFlow_WrongDate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"test\",\n  \"date\": \"29/06/2021\",\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_BadFlow_MissingCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2021-06-29\",\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_BadFlow_WrongCategory",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"})",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Blub\",\n  \"date\": \"2021-06-29\",\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Amount_ByCategory_BadFlow_NonExisting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Array with content\", function() {",
									"    pm.response.to.have.body(\"{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[]}\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen/test",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_GoodFlow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Response Json\", function() {",
									"    pm.response.to.have.body('{\"date\":\"2021-06-28\",\"description\":\"test\",\"value\":1.0}');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2021-06-29\",\n  \"description\": \"test\",\n  \"value\": 1\n}"
						},
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Amount_GoodFlow_Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Array with content\", function() {",
									"    pm.response.to.have.body(\"[{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0}]},{\\\"description\\\":\\\"Gesamt\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0}]}]\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Amount_ByCategory_GoodFlow_Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Array with content\", function() {",
									"    pm.response.to.have.body(\"{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0}]}\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen/test",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add_Entry_GoodFlow_MinusValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Response Json\", function() {",
									"    pm.response.to.have.body('{\"date\":\"2021-06-28\",\"description\":\"test\",\"value\":-1.0}');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"date\": \"2021-06-29\",\n  \"description\": \"test\",\n  \"value\": -1\n}"
						},
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Amount_GoodFlow_Double_Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Array with content\", function() {",
									"    pm.response.to.have.body(\"[{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0},{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":-1.0}]},{\\\"description\\\":\\\"Gesamt\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":0.0}]}]\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get_Amount_ByCategory_GoodFlow_DoubleContent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Array with content\", function() {",
									"    pm.response.to.have.body(\"{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0},{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":-1.0}]}\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ANSPAREN_HOST}}/ansparen/test",
							"host": [
								"{{ANSPAREN_HOST}}"
							],
							"path": [
								"ansparen",
								"test"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Certification",
			"item": [
				{
					"name": "GetCert_GoodFlow_Empty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Array with Content\", function() {",
									"    pm.response.to.have.body(\"[]\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCertByName_BadFlow_NotExisting",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert/test",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert",
								"test"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddCert_BadFlow_WrongMediaType",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 415\", function () {",
									"    pm.response.to.have.status(415);",
									"});",
									"",
									"pm.test(\"Has Array with Content\", function() {",
									"    pm.response.to.have.body;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/xml"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddCert_GoodFlow_MissingShortName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddCert_GoodFlow_MissingDescription",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shortname\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddCert_GoodFlow_MissingDateFrom",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateTo\": \"2021-07-06\"\n}"
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddCert_GoodFlow_MissingDateTo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\"\n}"
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddCert_GoodFlow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Array with Content\", function() {",
									"    pm.response.to.have.body;",
									"});",
									"",
									"pm.test(\"Has Array with Content\", function() {",
									"    pm.response.to.have.body(\"{\\\"shortname\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"dateFrom\\\":\\\"2021-07-06\\\",\\\"dateTo\\\":\\\"2021-07-06\\\"}\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCert_GoodFlow_Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Body\", function () {",
									"    pm.response.to.have.body();",
									"});",
									"",
									"pm.test(\"Has Array with Content\", function() {",
									"    pm.response.to.have.body(\"[{\\\"shortname\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"dateFrom\\\":\\\"2021-07-05\\\",\\\"dateTo\\\":\\\"2021-07-05\\\"}]\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCertByName_GoodFlow",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status Code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Has Array with Content\", function() {",
									"    pm.response.to.have.body;",
									"});",
									"",
									"pm.test(\"Has Array with Content\", function() {",
									"    pm.response.to.have.body(\"{\\\"shortname\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"dateFrom\\\":\\\"2021-07-05\\\",\\\"dateTo\\\":\\\"2021-07-05\\\"}\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Request-ID",
								"value": "1.2.3.4",
								"type": "text"
							},
							{
								"key": "SOURCE_IP",
								"value": "10.10.10.10",
								"type": "text"
							},
							{
								"key": "JWT",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{CERT_HOST}}/cert/string",
							"host": [
								"{{CERT_HOST}}"
							],
							"path": [
								"cert",
								"string"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Users",
							"item": [
								{
									"name": "Authenticate_User_BadFlow_emptyUsername",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Authenticate_User_BadFlow_emptyPassword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Authenticate_User_BadFlow_notExistingUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Authenticate_User_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Token in Response JSON\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"token\");",
													"    ",
													"});",
													"",
													"pm.test(\"Has Username in Response Json\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"\\\"allowedApplicationList\\\":[]\");",
													"});",
													"",
													"",
													"",
													"var data = JSON.parse(responseBody);",
													"console.log(data);",
													"pm.collectionVariables.set(\"token\", data.token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"test\",\n  \"password\": \"test\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Users_GoodFlow_Empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Empty Array\", function() {",
													"    pm.response.to.have.body('[{\"id\":\"1\",\"username\":\"test\"}]');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register_User_BadFlow_wrongContentType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 415\", function () {",
													"    pm.response.to.have.status(415);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/xml"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register_User_BadFlow_emptyUsername",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register_User_BadFlow_emptyPassword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify_JWT_BadFlow_notExistingUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 500\", function () {",
													"    pm.response.to.have.status(500);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"str1\",\n  \"token\": \"{{token}}\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register_User_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Token in Response JSON\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"jwt\");",
													"});",
													"",
													"pm.test(\"Has Username in Response Json\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"\\\"username\\\":\\\"string\\\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register_User_BadFlow_secondTime",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string\",\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Users_GoodFlow_Content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"username\\\":\\\"test\\\"},{\\\"id\\\":\\\"2\\\",\\\"username\\\":\\\"string\\\"}]\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Register_User_GoodFlow_AnotherUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Token in Response JSON\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"jwt\");",
													"});",
													"",
													"pm.test(\"Has Username in Response Json\", function() {",
													"    pm.expect(pm.response.text()).to.include(\"\\\"username\\\":\\\"string1\\\"\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string1\",\n  \"password\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Users_GoodFlow_DoubleContent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"username\\\":\\\"test\\\"},{\\\"id\\\":\\\"2\\\",\\\"username\\\":\\\"string\\\"},{\\\"id\\\":\\\"3\\\",\\\"username\\\":\\\"string1\\\"}]\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify_JWT_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"mfaNeeded\\\":true,\\\"mfaAction\\\":\\\"setup\\\"}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"string1\",\n  \"token\": \"{{token}}\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth"
											]
										}
									},
									"response": []
								},
								{
									"name": "ChangePassword_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"changed\\\":true}\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"{{token}}\",\n  \"password\": \"string1\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "ChangePassword_BadFlow_missingJWT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"string1\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "ChangePassword_BadFlow_missingPassword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"{{token}}\",\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "ChangePassword_BadFlow_emptyPassword",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"changed\\\":false}\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"{{token}}\",\n  \"password\": \"\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "ChangePassword_BadFlow_nonExistingUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"{{token}}\",\n  \"password\": \"string1\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/auth/bla",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"auth",
												"bla"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Apps",
							"item": [
								{
									"name": "Get_Apps_GoodFlow_Empty",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Empty Array\", function() {",
													"    pm.response.to.have.body('[]');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_emptyJWT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": [\n    \"string\"\n  ]\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_wrongJWT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "Test",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"string\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": [\n    \"string\"\n  ]\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_BadRequest",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 400\", function () {",
													"    pm.response.to.have.status(400);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_onlyJWT",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_Wrong_MediaType",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 415\", function () {",
													"    pm.response.to.have.status(415);",
													"})"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_Missing_Appname",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_Missing_CssClasses",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"allowedUsers\": []\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_Missing_URL",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_Missing_AllowedUsers",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\"\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_App_By_Name_BadFlow_Non_Existing",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    var res = (_.isEmpty(responseBody));",
													"    pm.expect(res).to.be.true",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Response Json\", function() {",
													"   pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":null,\\\"allowedUsers\\\":[]}\");",
													"});",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_App_By_Name_Good_Flow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Response Json\", function() {",
													"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"string\\\",\\\"allowedUsers\\\":[]}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app/string",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_BadFlow_App_SecondTime",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 403\", function () {",
													"    pm.response.to.have.status(403);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Apps_GoodFlow_Content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"appname\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"string\\\"}]\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add_App_GoodFlow_AnotherApp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Response Json\", function() {",
													"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"testapp\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":null,\\\"allowedUsers\\\":[]}\");",
													"});",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"testapp\",\n  \"url\": \"string\",\n  \"cssClasses\": \"string\",\n  \"allowedUsers\": []\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Apps_GoodFlow_Double_Content",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"appname\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"string\\\"},{\\\"id\\\":\\\"2\\\",\\\"appname\\\":\\\"testapp\\\",\\\"cssClasses\\\":\\\"string\\\"}]\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update_App_GoodFlow_FirstApp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Response Json\", function() {",
													"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\",\\\"allowedUsers\\\":[]}\");",
													"});",
													"    "
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"jwt\": \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJsdWthcyIsImF1dGgiOiJST0xFX1NFUlZJQ0UiLCJpYXQiOjE2MjUwMjEyMzAsImV4cCI6MTY1NjU1NzIzMH0.EI3O67JaQ1lg6K0RwAT8UwbrudGLXB_KXuJgoHEUeGuvkcX329s-OEg59OKSTC1N2iQNqd2LC7tKwhgFOAhw4A\",\n  \"appname\": \"string\",\n  \"url\": \"string\",\n  \"cssClasses\": \"test\",\n  \"allowedUsers\": []\n}"
										},
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_Apps_GoodFlow_Double_Content_PostUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"[{\\\"id\\\":\\\"1\\\",\\\"appname\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\"},{\\\"id\\\":\\\"2\\\",\\\"appname\\\":\\\"testapp\\\",\\\"cssClasses\\\":\\\"string\\\"}]\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get_App_By_Name_Good_Flow_PostUpdate",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Response Json\", function() {",
													"    pm.response.to.have.body(\"{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\",\\\"allowedUsers\\\":[]}\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{API_HOST}}/app/string",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AppOfUser",
							"item": [
								{
									"name": "GetAppOfUser_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Empty Array\", function() {",
													"    pm.response.to.have.body('[]');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/appOfUser/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"appOfUser",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetAppOfUser_BadFlow_NonExistingUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Empty Array\", function() {",
													"    pm.response.to.have.body('[]');",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/appOfUser/str",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"appOfUser",
												"str"
											]
										}
									},
									"response": []
								},
								{
									"name": "VerifyAppOfUser_BadFlow_NotAllowed",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"",
													"pm.test(\"Has Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"not_allowed\\\"}\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/app/string/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "VerifyAppOfUser_BadFlow_NotExistingApp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"",
													"pm.test(\"Has Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"not_allowed\\\"}\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/app/test111/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"test111",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "VerifyAppOfUser_BadFlow_NotExistingUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"",
													"pm.test(\"Has Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"not_allowed\\\"}\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/app/test/string1111",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"test",
												"string1111"
											]
										}
									},
									"response": []
								},
								{
									"name": "AddAppOfUser_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"updated\\\":true}\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/app/string/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "AddAppOfUser_BadFlow_NotExistingApp",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"updated\\\":false}\");",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/app/string11/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string11",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "AddAppOfUser_BadFlow_NotExistingUser",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/app/string/string1111",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string",
												"string1111"
											]
										}
									},
									"response": []
								},
								{
									"name": "GetAppOfUser_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"pm.test(\"Has Array with Content\", function() {",
													"    pm.response.to.have.body(\"[{\\\"appname\\\":\\\"string\\\",\\\"url\\\":\\\"string\\\",\\\"cssClasses\\\":\\\"test\\\",\\\"allowedUsers\\\":null}]\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/appOfUser/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"appOfUser",
												"string1"
											]
										}
									},
									"response": []
								},
								{
									"name": "VerifyAppOfUser_GoodFlow",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status Code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Has Body\", function () {",
													"    pm.response.to.have.body();",
													"});",
													"",
													"",
													"pm.test(\"Has Content\", function() {",
													"    pm.response.to.have.body(\"{\\\"verificationMessage\\\":\\\"allowed\\\"}\");",
													"});",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											},
											{
												"key": "X-Request-ID",
												"value": "1.2.3.4",
												"type": "text"
											},
											{
												"key": "X-Real-IP",
												"value": "10.10.10.10",
												"type": "text"
											},
											{
												"key": "JWT",
												"value": "{{token}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{API_HOST}}/app/string/string1",
											"host": [
												"{{API_HOST}}"
											],
											"path": [
												"app",
												"string",
												"string1"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Ansparen",
					"item": [
						{
							"name": "Get_Amount_GoodFlow_Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Empty Array\", function() {",
											"    pm.response.to.have.body('[{\"description\":\"Gesamt\",\"entries\":[]}]');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_BadFlow_Wrong_MediaType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 415\", function () {",
											"    pm.response.to.have.status(415);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_BadFlow_BadRequest",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_BadFlow_MissingValue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"date\": \"2021-06-29\",\n  \"description\": \"test\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_BadFlow_MissingDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"test\",\n  \"value\": 1\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_BadFlow_WrongDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"test\",\n  \"date\": \"29/06/2021\",\n  \"value\": 1\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_BadFlow_MissingCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"date\": \"2021-06-29\",\n  \"value\": 1\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_BadFlow_WrongCategory",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"})",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Blub\",\n  \"date\": \"2021-06-29\",\n  \"value\": 1\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Amount_ByCategory_BadFlow_NonExisting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with content\", function() {",
											"    pm.response.to.have.body(\"{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[]}\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen/test",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Response Json\", function() {",
											"    pm.response.to.have.body('{\"date\":\"2021-06-28\",\"description\":\"test\",\"value\":1.0}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"date\": \"2021-06-29\",\n  \"description\": \"test\",\n  \"value\": 1\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Amount_GoodFlow_Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0}]},{\\\"description\\\":\\\"Gesamt\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0}]}]\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Amount_ByCategory_GoodFlow_Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with content\", function() {",
											"    pm.response.to.have.body(\"{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0}]}\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen/test",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add_Entry_GoodFlow_MinusValue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Response Json\", function() {",
											"    pm.response.to.have.body('{\"date\":\"2021-06-28\",\"description\":\"test\",\"value\":-1.0}');",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"date\": \"2021-06-29\",\n  \"description\": \"test\",\n  \"value\": -1\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Amount_GoodFlow_Double_Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0},{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":-1.0}]},{\\\"description\\\":\\\"Gesamt\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":0.0}]}]\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Amount_ByCategory_GoodFlow_DoubleContent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with content\", function() {",
											"    pm.response.to.have.body(\"{\\\"description\\\":\\\"test\\\",\\\"entries\\\":[{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":1.0},{\\\"date\\\":\\\"2021-06-28\\\",\\\"amount\\\":-1.0}]}\")",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{API_HOST}}/ansparen/test",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"ansparen",
										"test"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Certification",
					"item": [
						{
							"name": "GetCert_GoodFlow_Empty",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[]\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCertByName_BadFlow_NotExisting",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{API_HOST}}/cert/test",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert",
										"test"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddCert_BadFlow_WrongMediaType",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 415\", function () {",
											"    pm.response.to.have.status(415);",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/xml"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddCert_GoodFlow_MissingShortName",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddCert_GoodFlow_MissingDescription",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shortname\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddCert_GoodFlow_MissingDateFrom",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateTo\": \"2021-07-06\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddCert_GoodFlow_MissingDateTo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 400\", function () {",
											"    pm.response.to.have.status(400);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "AddCert_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body;",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"shortname\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"dateFrom\\\":\\\"2021-07-06\\\",\\\"dateTo\\\":\\\"2021-07-06\\\"}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"shortname\": \"string\",\n  \"description\": \"string\",\n  \"dateFrom\": \"2021-07-06\",\n  \"dateTo\": \"2021-07-06\"\n}"
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCert_GoodFlow_Content",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Body\", function () {",
											"    pm.response.to.have.body();",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"[{\\\"shortname\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"dateFrom\\\":\\\"2021-07-05\\\",\\\"dateTo\\\":\\\"2021-07-05\\\"}]\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{API_HOST}}/cert",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert"
									]
								}
							},
							"response": []
						},
						{
							"name": "GetCertByName_GoodFlow",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status Code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body;",
											"});",
											"",
											"pm.test(\"Has Array with Content\", function() {",
											"    pm.response.to.have.body(\"{\\\"shortname\\\":\\\"string\\\",\\\"description\\\":\\\"string\\\",\\\"dateFrom\\\":\\\"2021-07-05\\\",\\\"dateTo\\\":\\\"2021-07-05\\\"}\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "X-Request-ID",
										"value": "1.2.3.4",
										"type": "text"
									},
									{
										"key": "X-Real-IP",
										"value": "10.10.10.10",
										"type": "text"
									},
									{
										"key": "JWT",
										"value": "{{token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{API_HOST}}/cert/string",
									"host": [
										"{{API_HOST}}"
									],
									"path": [
										"cert",
										"string"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ANSPAREN_HOST",
			"value": "http://localhost:8000"
		},
		{
			"key": "API_HOST",
			"value": "http://localhost:8000"
		},
		{
			"key": "CERT_HOST",
			"value": "http://localhost:8000"
		},
		{
			"key": "AUTH_HOST",
			"value": "http://localhost:8000"
		},
		{
			"key": "token",
			"value": ""
		}
	]
}