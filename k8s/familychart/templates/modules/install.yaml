{{ if .Values.installer.deploy }}
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}-installer"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: "{{ .Release.Name }}-installer"
    app.kubernetes.io/instance: "{{ .Release.Name }}-installer"
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/component: "{{ .Release.Name }}-installer"
    app.kubernetes.io/part-of: "{{ .Release.Name }}"
    app.kubernetes.io/managed-by: helm
    owner: KieniL
  annotations:
    email: test@test.at
    seccomp.security.alpha.kubernetes.io/pod: runtime/default
spec:
  backoffLimit: 9
  ttlSecondsAfterFinished: 50
  template:
    metadata:
      annotations:
        # AGENT INJECTOR SETTINGS
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/agent-run-as-same-user: "true"
        vault.hashicorp.com/agent-pre-populate-only : "true"
        # DB SECRETs
        vault.hashicorp.com/agent-inject-secret-auth_db: "k8s_secrets/family/authdb"
        vault.hashicorp.com/agent-inject-template-auth_db: |
          {{`{{- with secret "k8s_secrets/family/authdb" -}}
            {{ .Data.db }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-cert_db: "k8s_secrets/family/certdb"
        vault.hashicorp.com/agent-inject-template-cert_db: |
          {{`{{- with secret "k8s_secrets/family/certdb" -}}
            {{ .Data.db }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-anspar_db: "k8s_secrets/family/anspardb"
        vault.hashicorp.com/agent-inject-template-anspar_db: |
          {{`{{- with secret "k8s_secrets/family/anspardb" -}}
            {{ .Data.db }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-auth_user: "k8s_secrets/family/authdb"
        vault.hashicorp.com/agent-inject-template-auth_user: |
          {{`{{- with secret "k8s_secrets/family/authdb" -}}
            {{ .Data.username }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-cert_user: "k8s_secrets/family/certdb"
        vault.hashicorp.com/agent-inject-template-cert_user: |
          {{`{{- with secret "k8s_secrets/family/certdb" -}}
            {{ .Data.username }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-anspar_user: "k8s_secrets/family/anspardb"
        vault.hashicorp.com/agent-inject-template-anspar_user: |
          {{`{{- with secret "k8s_secrets/family/anspardb" -}}
            {{ .Data.username }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-auth_pass: "k8s_secrets/family/authdb"
        vault.hashicorp.com/agent-inject-template-auth_pass: |
          {{`{{- with secret "k8s_secrets/family/authdb" -}}
            {{ .Data.password }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-cert_pass: "k8s_secrets/family/certdb"
        vault.hashicorp.com/agent-inject-template-cert_pass: |
          {{`{{- with secret "k8s_secrets/family/certdb" -}}
            {{ .Data.password }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-anspar_pass: "k8s_secrets/family/anspardb"
        vault.hashicorp.com/agent-inject-template-anspar_pass: |
          {{`{{- with secret "k8s_secrets/family/anspardb" -}}
            {{ .Data.password }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-db_admin_user: "k8s_secrets/family/admin"
        vault.hashicorp.com/agent-inject-template-db_admin_user: |
          {{`{{- with secret "k8s_secrets/family/admin" -}}
            {{ .Data.username }}
          {{- end }}`}}
        vault.hashicorp.com/agent-inject-secret-db_admin_password: "k8s_secrets/family/admin"
        vault.hashicorp.com/agent-inject-template-db_admin_password: |
          {{`{{- with secret "k8s_secrets/family/admin" -}}
            {{ .Data.password }}
          {{- end }}`}}
        # VAULT SETTINGS
        vault.hashicorp.com/role: 'installer-app'
    spec:
      serviceAccountName: {{ .Release.Name }}-installer-sa
      terminationGracePeriodSeconds: 40
      restartPolicy: Never
      initContainers:
      - name: wait-for-mysqldb
        image: busybox:1.28
        imagePullPolicy: Always
        command: ['sh', '-c', "until nslookup {{ .Release.Name }}-mysql.{{ .Release.Namespace }}.svc.cluster.local; do echo waiting for mysql; sleep 20; done"]
      securityContext:
        runAsUser: 20000
        runAsGroup: 20000
        runAsNonRoot: true
      containers:
      - name:  "{{ .Release.Name }}-installer"
        image: luke19/familycluster_installer@{{ .Values.installer.image }}
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 20000
          runAsGroup: 20000
          runAsNonRoot: true
          capabilities:
            drop:
              - all
        resources:
          limits:
            memory: "{{ .Values.installer.resources.memory_limit }}"
            cpu: "{{ .Values.installer.resources.cpu_limit }}"
          requests:
            memory: "{{ .Values.installer.resources.memory_request }}"
            cpu: "{{ .Values.installer.resources.cpu_request }}"
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: "{{ .Release.Name }}-config"
              key: TZ
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: "{{ .Release.Name }}-config"
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: "{{ .Release.Name }}-config"
              key: DB_PORT
        {{ if .Values.installer.deploy }}
        - name: ADD_DUMMYDATA
          value: "true"
        {{ end }}
{{ end }}