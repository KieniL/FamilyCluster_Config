# This is a YAML-formatted file.
# Declare variables to be passed into your templates.


installer:
  # -- defines if the installer job should be deployed
  deploy: false
  # -- the image tag of the installer (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:b529fd4294c06e2f6a58195a1eacd41d9b9a812d81797f7c1214aa274b995660"
  # -- sets if the dummy_data should be added to the database
  dummy_data: false
  resources:
    # -- the memory limit for the installer pod
    memory_limit: 512Mi
    # -- the memory request for the installer pod
    memory_request: 256Mi
    # -- the cpu request for the installer pod
    cpu_request: 150m
    # -- the cpu limit for the installer pod
    cpu_limit: 1000m


ansparen:
  # -- defines if the ansparen deployment should be deployed
  deploy: true
  # -- the image tag of the ansparen deployment (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:b9a132f7e61010cc41dcb5a92e3b72f2d7baa64d4d0cb0aa822711fbccc2e442"
  resources:
    # -- the memory limit for the ansparen pod
    memory_limit: 512Mi
    # -- the memory request for the ansparen pod
    memory_request: 256Mi
    # -- the cpu request for the ansparen pod
    cpu_request: 150m
    # -- the cpu limit for the ansparen pod
    cpu_limit: 1000m
    hpa:
      # -- the min replicas for ansparen
      min_replica: 1
      # -- the max replicas for ansparen
      max_replica: 5
      # -- the amount of cpu utilization to check for scaling
      cpu_utilization: 60


cert:
  # -- defines if the certifiction deployment should be deployed
  deploy: true
  # -- the image tag of the certication deployment (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:63b8c18fcc1a0cf0a53f3c396a1e1f688d3e0f64496b34ca126713bc7064c26b"
  resources:
    # -- the memory limit for the certification pod
    memory_limit: 512Mi
    # -- the memory request for the certification pod
    memory_request: 256Mi
    # -- the cpu request for the certification pod
    cpu_request: 150m
    # -- the cpu limit for the certification pod
    cpu_limit: 1000m
    hpa:
      # -- the min replicas for certification
      min_replica: 1
      # -- the max replicas for certification
      max_replica: 5
      # -- the amount of cpu utilization to check for scaling
      cpu_utilization: 60


auth:
  # -- defines if the authentication deployment should be deployed
  deploy: true
  # -- the image tag of the authentication deployment (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:d05c5a33f116226371f59eb25c7ebcd2017f85e80f57ed771b5a545d1995cc1d"
  resources:
    # -- the memory limit for the authentication pod
    memory_limit: 512Mi
    # -- the memory request for the authentication pod
    memory_request: 256Mi
    # -- the cpu request for the authentication pod
    cpu_request: 150m
    # -- the cpu limit for the authentication pod
    cpu_limit: 1000m
    hpa:
      # -- the min replicas for authentication
      min_replica: 1
      # -- the max replicas for authentication
      max_replica: 5
      # -- the amount of cpu utilization to check for scaling
      cpu_utilization: 60



api:
  # -- defines if the api deployment should be deployed
  deploy: true
  # -- the image tag of the api deployment (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:b09d430e95e4f28c3cd77af4f2adc1b336225fea5bb57c8953d800423a1bfeb4"
  resources:
    # -- the memory limit for the api pod
    memory_limit: 512Mi
    # -- the memory request for the api pod
    memory_request: 256Mi
    # -- the cpu request for the api pod
    cpu_request: 150m
    # -- the cpu limit for the api pod
    cpu_limit: 750m
    hpa:
      # -- the min replicas for api
      min_replica: 1
      # -- the max replicas for api
      max_replica: 5
      # -- the amount of cpu utilization to check for scaling
      cpu_utilization: 60



frontend:
  # -- defines if the frontend deployment should be deployed
  deploy: true
  # -- the image tag of the frontend deployment (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:c36cc8e80acd1449f67bbea8f07e0bbe675bc2f3b1363cd7e013934404eb07ef"
  resources:
    # -- the memory limit for the frontend pod
    memory_limit: 512Mi
    # -- the memory request for the frontend pod
    memory_request: 256Mi
    # -- the cpu request for the frontend pod
    cpu_request: 150m
    # -- the cpu limit for the frontend pod
    cpu_limit: 750m
    hpa:
      # -- the min replicas for frontend
      min_replica: 1
      # -- the max replicas for frontend
      max_replica: 5
      # -- the amount of cpu utilization to check for scaling
      cpu_utilization: 60


testsuite:
  # -- defines if the testsuite deployment should be deployed
  deploy: false
  # -- the image tag of the testsuite deployment (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:4a47d758559862512cabb90751c38f51b5fab0f81d65bd9ecea466f248d2ed15"
  resources:
    # -- the memory limit for the testsuite pod
    memory_limit: 1000Mi
    # -- the memory request for the testsuite pod
    memory_request: 100Mi
    # -- the cpu request for the testsuite pod
    cpu_request: 150m
    # -- the cpu limit for the testsuite pod
    cpu_limit: 1000m

securitycheck:
  # -- defines if the security jobs (kube-hunter and kube-bench) should be deployed to check the service account token
  deploy: false
  resources:
      # -- the memory limit for the security jobs
      memory_limit: 1000Mi
      # -- the memory request for the security jobs
      memory_request: 100Mi
      # -- the cpu request for the security jobs
      cpu_request: 150m
      # -- the cpu limit for the security jobs
      cpu_limit: 1000m

postman:
  # -- defines the imagetag of the postman test (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
  image: "sha256:1eeb4fd8b3f53be09f46ee4fc1d4a47e9ee450a2681b4d58e82283b73e5739f7"

storage:
  db:
    # -- the imagetag to deploy (a digest is used to have a unique identifier when an imagetag is pushed multiple times)
    image: "sha256:fef5341d666ccb7ad9213027fc1815c1243d29f94bd2c7392f7f0d7177cf6e91"
    # -- sets if the volume for the db should be used or not
    persistance_needed: true
    # -- the memory limit used for the mysql pod
    memory_limit: 512Mi
    # -- the memory request used for the mysql pod
    memory_request: 256Mi
    # -- the cpu request used for the mysql pod
    cpu_request: 50m
    # -- the cpu limit used for the mysql pod
    cpu_limit: 400m
    # -- the size of the volume used
    size: 15Gi
    # -- the accessModes used
    accessModes: ReadWriteMany
    # -- the storageClassName used in the volume
    storageClassName: manual
    # -- the path where to store the volume on disk
    path: /mnt/k8s/dbdata

ingress:
  tls:
    # -- the secret in the namespace for the ingress tls
    secret: tls-secret
  # -- the hostname for the ingress
  url: frontend.kieni.at
  # -- the amount of allowed connections from an ip per second
  limitrps: 5
  # -- the amount of allowed connection from an ip per minute
  limitrpm: 30

tests:
  # -- set to true if the testconfigmap should be deployed too
  deploy: false
  # -- the memory limit used for the dbconnectiontets pod
  memory_limit: 512Mi
  # -- the memory request used for the dbconnectiontets pod
  memory_request: 256Mi
  # -- the cpu request used for the dbconnectiontets pod
  cpu_request: 50m
  # -- the cpu limit used for the dbconnectiontets pod
  cpu_limit: 400m


monitoring:
  # -- set to true if networkpolicy should be deployed with allowing the namespace monitoring
  deploy: false

